{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, _ref) => {\n    let {\n      inputValue,\n      getOptionLabel\n    } = _ref;\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(_ref2 => {\n    let {\n      event,\n      index,\n      reason = 'auto'\n    } = _ref2;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.classList.add('Mui-focused');\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(_ref3 => {\n    let {\n      event,\n      diff,\n      direction = 'next',\n      reason = 'auto'\n    } = _ref3;\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = function (event, option) {\n    let reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'selectOption';\n    let origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n  const handleClick = () => {\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n  return {\n    getRootProps: function () {\n      let other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n        role: 'combobox',\n        'aria-expanded': listboxAvailable\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: _ref4 => {\n      let {\n        index\n      } = _ref4;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: _ref5 => {\n      let {\n        index,\n        option\n      } = _ref5;\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","map":{"version":3,"names":["_extends","React","unstable_setRef","setRef","unstable_useEventCallback","useEventCallback","unstable_useControlled","useControlled","unstable_useId","useId","stripDiacritics","string","normalize","replace","createFilterOptions","config","arguments","length","undefined","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","_ref","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","defaultFilterOptions","pageSize","useAutocomplete","props","autoComplete","autoHighlight","autoSelect","blurOnSelect","disabled","disabledProp","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","isOptionEqualToValue","value","groupBy","handleHomeEndKeys","id","idProp","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","open","openProp","openOnFocus","selectOnFocus","valueProp","optionLabel","process","env","NODE_ENV","erroneousReturn","console","error","JSON","String","ignoreFocus","useRef","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","useState","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setValueState","controlled","default","name","setInputValueState","state","focused","setFocused","resetInputValue","useCallback","event","newValue","isOptionSelected","newInputValue","prevValue","useEffect","valueChange","current","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","missingValue","warn","join","focusTag","tagToFocus","focus","querySelector","validOptionIndex","index","direction","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","setHighlightedIndex","_ref2","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","scrollTop","add","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","_ref3","diff","getNextIndex","maxIndex","newIndex","Math","abs","nextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","nodeName","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","matches","push","splice","ctrlKey","metaKey","blur","validTagIndex","handleFocusTag","nextTag","handleClear","handleKeyDown","other","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","indexBy","Map","reduce","acc","group","get","set","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","_ref4","onDelete","getListboxProps","getOptionProps","_ref5","selected","onMouseOver","onTouchStart"],"sources":["/home/ana/Documentos/proyectos-ana.github/E-commerce/new-ecomerce/node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}